install.packages('tidyverse')
knitr::opts_chunk$set(echo = TRUE)
#install.packages('tidyverse')
library(tidyverse)
#install.packages('tidyverse')
library(tidyverse)
data <- read.csv("https://datahub.io/machine-learning/credit-g/r/credit-g.csv")
head(data)
#install.packages('tidyverse')
library(tidyverse)
data <- read.csv("https://datahub.io/machine-learning/credit-g/r/credit-g.csv")
head(data)
#install.packages('tidyverse')
library(tidyverse)
data <- read.csv("https://datahub.io/machine-learning/credit-g/r/credit-g.csv")
# Leer con punto quita espacios, guin bajo deja.
head(data)
# shift ctrl m pa sacar el %>%
data %>% filter(age >= 29) %>% count(class)
# shift ctrl m pa sacar el %>%
data %>% filter(age >= 29)
# ctrl alt i -> chunk python
# Agrupar por personal status y usar promedio de la edad groupby y summarize
data %>% groupby(personal_status) %>% summarise(mean(age))
# ctrl alt i -> chunk python
# Agrupar por personal status y usar promedio de la edad groupby y summarize
data %>% group_by(personal_status) %>% summarise(mean(age))
# ctrl alt i -> chunk python
# Agrupar por personal status y usar promedio de la edad groupby y summarize
data %>% group_by(personal_status) %>% summarise(mean_age = mean(age))
# ctrl alt i -> chunk python
# Agrupar por personal status y usar promedio de la edad groupby y summarize
data %>% group_by(personal_status) %>% summarise("Mean age" = mean(age))
# ctrl alt i -> chunk python
# Agrupar por personal status y usar promedio de la edad groupby y summarize
data %>% group_by(personal_status) %>%
summarise("Mean age" = mean(age))
# ctrl alt i -> chunk python
# Agrupar por personal status y usar promedio de la edad groupby y summarize
data %>% group_by(personal_status, class) %>%
summarise("Mean age" = mean(age))
#install.packages('tidyverse')
library(tidyverse)
data <- read.csv("https://datahub.io/machine-learning/credit-g/r/credit-g.csv")
# Leer con punto quita espacios, guin bajo deja.
head(data)
# shift ctrl m pa sacar el %>%
data %>% filter(age >= 29) %>% count(class)
# ctrl alt i -> chunk python
# Agrupar por personal status y usar promedio de la edad groupby y summarize
data %>% group_by(personal_status, class) %>%
summarise("Mean age" = mean(age))
data %>% ggplot()
data %>% ggplot(aes(age,num_dependents))
data %>% ggplot(aes(age,num_dependents))+
geom_point()
data %>% ggplot(aes(age,credit_amount))+
geom_point()
data %>% ggplot(aes(age,credit_amount), fill(class))+
geom_point()
data %>% ggplot(aes(age,credit_amount), fill(class()))+
geom_point()
data %>% ggplot(aes(age,credit_amount), fill=class+
geom_point()
data %>% ggplot(aes(age,credit_amount,fill=class)), +
data %>% ggplot(aes(age,credit_amount,color=class)), +
data %>% ggplot(aes(age,credit_amount, color = class)), +
data %>% ggplot(aes(age,credit_amount, color = class)) +
geom_point()
data %>% ggplot(aes(age,credit_amount, color = class)) +
geom_point() + geom_smooth()
data %>% ggplot(aes(age,credit_amount, color = class)) +
geom_point() + geom_smooth(method=lm)
# color de los puntitos pero solo una linea de tendencia relación entre edad y monto
data %>% ggplot(aes(age,credit_amount, color = class)) +
geom_smooth(method=lm) + geom_point()
# Area gris es el intervalo de confianza de los datos
# color de los puntitos pero solo una linea de tendencia relación entre edad y monto
data %>% ggplot(aes(age,credit_amount, color = class)) +
geom_smooth(method=lm) %>%  geom_point()
# color de los puntitos pero solo una linea de tendencia relación entre edad y monto
data %>% ggplot(aes(age,credit_amount)) +
geom_smooth(method=lm) + geom_point(aes( color = class))
# Area gris es el intervalo de confianza de los datos
# Comportamiento de distribución
data %>% ggplot() +
geom_boxplot(aes(x=class,y=duration))
# Comportamiento de distribución
data %>% ggplot() +
geom_boxplot(mapping = aes(x=class,y=duration))
install.packages("nycflights13")
install.packages("DataExplorer")
library(nycflights13)
library(DataExplorer)
# install.packages("nycflights13")
# install.packages("DataExplorer")
library(nycflights13)
library(DataExplorer)
data_f <- list(airlines, airports,flights, planes, weather)
View(data_f)
View(data_f)
plot_str(data_f)
plot_str(data_f)
# Crear conjunto de datos con merge o join para el left join usamos all.x
final_data_f <- flights %>% merge(airlines, by = 'carrier', all.x = TRUE)
head(final_data_f)
# Crear conjunto de datos con merge o join para el left join usamos all.x
final_data_f <- flights %>% merge(airlines, by = 'carrier', all.x = TRUE)
head(final_data_f) %>% merge(planes, by='tailnum', all.x = TRUE, suffixes = c('_flights', '_planes'))
# Crear conjunto de datos con merge o join para el left join usamos all.x
final_data <- flights %>% merge(airlines, by = 'carrier', all.x = TRUE) %>%
merge(planes, by = 'tailnum', all.x = TRUE, suffixes = c('_flights',"_planes")) %>%
merge(airports, by.x = "origin", by.y = "faa", all.x = TRUE, suffixes = c("_carrier","_origin")) %>%
merge(airports, by.x = "dest", by.y = "faa", all.x = TRUE, suffixes = c('_origin','_dest'))
head(final_data)
introduce(final_data)
plot_intro(final_data)
plot_missing(final_data)
